{"version":3,"sources":["components/header.jsx","components/footer.jsx","components/uploadModal.jsx","components/video.jsx","components/videos.jsx","App.js","index.js"],"names":["Header","className","type","data-toggle","data-target","aria-controls","aria-expanded","xmlns","width","height","fill","viewBox","d","Component","Footer","UploadModal","state","title","selectedFile","loaded","data","changeTitleHandler","event","setState","target","value","onChangeHandler","files","maxSelectFile","checkMimeType","checkFileSize","onClickHandler","a","validate","axios","post","config","Server_URL","onUploadProgress","ProgressEvent","total","then","res","toast","success","setTimeout","this","resetsFileInput","onUploaded","props","window","closeModal","bind","FormData","error","append","x","length","File_upload","numFiles","msg","warn","err","types","every","size","sizeLimit","randomString","Math","random","toString","theInputKey","id","role","data-testid","aria-labelledby","aria-hidden","data-dismiss","aria-label","method","action","onChange","placeholder","multiple","max","color","round","onClick","Video","Moment","locale","href","filename","src","image","preserveAspectRatio","focusable","alt","datetime","format","Videos","fetchResult","get","console","log","map","App","Fragment","ReactDOM","render","document","getElementById"],"mappings":"yWA4BeA,E,4JAvBX,WACI,OACI,mCACI,qBAAKC,UAAU,uCAAf,SACI,sBAAKA,UAAU,YAAf,UACC,sBAAMA,UAAU,yCAAhB,SACG,oDAEJ,wBAAQA,UAAU,iBAAiBC,KAAK,SAASC,cAAY,QAAQC,cAAY,eACjFC,gBAAc,eAAeC,gBAAc,QAD3C,SAEI,sBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeT,UAAU,oBAAoBU,QAAQ,YAAzH,UACI,sBAAMC,EAAE,0EACR,sBAAMA,EAAE,oHAKpB,cAAC,IAAD,W,GAlBKC,aCUNC,E,4JAXX,WACI,OACI,wBAAQb,UAAU,+BAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAMA,UAAU,aAAhB,6D,GALCY,a,kEC0LNE,E,4MArLXC,MAAQ,CACJC,MAAO,GACPC,aAAc,KACdC,OAAQ,EACRC,KAAM,M,EAGVC,mBAAqB,SAACC,GAClB,EAAKC,SAAS,CAACN,MAAOK,EAAME,OAAOC,S,EAGvCC,gBAAkB,SAACJ,GACf,IAAIK,EAAQL,EAAME,OAAOG,MAEtB,EAAKC,cAAcN,EAAOK,IAAU,EAAKE,cAAcP,EAAOK,IAAU,EAAKG,cAAcR,EAAOK,IACjG,EAAKJ,SAAS,CACVL,aAAcS,K,EAK1BI,e,sBAAiB,sBAAAC,EAAA,sEACP,EAAKC,WADE,OAGU,OAApB,EAAKjB,MAAMI,MACVc,IAAMC,KAAKC,EAAOC,WAAa,UAAW,EAAKrB,MAAMI,KAAM,CAC3DkB,iBAAkB,SAAAC,GACd,EAAKhB,SAAS,CACVJ,OAASoB,EAAcpB,OAASoB,EAAcC,MAAM,SAI/DC,MAAK,SAAAC,GAiBF,OAhBAC,IAAMC,QAAQ,sBAGdC,WAAW,WACPC,KAAKvB,SAAS,CACVH,KAAM,KACNH,MAAO,GACPC,aAAc,KACdC,OAAQ,IAEZ2B,KAAKC,mBAELC,EADuBF,KAAKG,MAApBD,cAERE,OAAOC,cAEVC,KAZU,gBAYE,MACN,KA5BE,2C,EAiCjBnB,SAAW,WAEP,IAAMb,EAAO,IAAIiC,SAEjB,GAAwB,KAArB,EAAKrC,MAAMC,MAEV,OADA0B,IAAMW,MAAM,wCACL,EAKX,GAFAlC,EAAKmC,OAAO,QAAS,EAAKvC,MAAMC,OAED,OAA5B,EAAKD,MAAME,aAEV,OADAyB,IAAMW,MAAM,wCACL,EAGX,IAAI,IAAIE,EAAI,EAAGA,EAAE,EAAKxC,MAAME,aAAauC,OAAQD,IAC7CpC,EAAKmC,OAAO,OAAQ,EAAKvC,MAAME,aAAasC,IAGhD,OADA,EAAKjC,SAAS,CAACH,KAAMA,IAAO,gBACrB,G,EAGXQ,cAAgB,SAACN,EAAOK,GACpB,GAAIA,EAAM8B,OAASrB,EAAOsB,YAAYC,SAAU,CAC5C,IAAMC,EAAM,QAAUxB,EAAOsB,YAAYC,SAAW,kCAGpD,OAFArC,EAAME,OAAOC,MAAQ,KACrBkB,IAAMkB,KAAKD,IACJ,EAEX,OAAO,G,EAGX/B,cAAgB,SAACP,EAAOK,GAOpB,IALA,IAAImC,EAAM,GAEJC,EAAQ,CAAC,aAJe,WAOtBP,GAEJ,GAAIO,EAAMC,OAAM,SAAA9D,GAAI,OAAIyB,EAAM6B,GAAGtD,OAASA,KAGtC,OADA4D,EAAM,sDACN,SALAN,EAAI,EAAGA,EAAE7B,EAAM8B,OAAQD,IAAK,gBAA5BA,GAKA,MAIR,MAAY,KAARM,IACAxC,EAAME,OAAOC,MAAQ,KACrBkB,IAAMkB,KAAKC,IAEJ,I,EAKfhC,cAAgB,SAACR,EAAOK,GAIpB,IAHA,IAAIsC,EAAO7B,EAAOsB,YAAYQ,UAC1BJ,EAAM,GAEFN,EAAI,EAAGA,EAAE7B,EAAM8B,OAAQD,IAEvB7B,EAAM6B,GAAGS,KAAOA,IAChBH,GAAOnC,EAAM6B,GAAGtD,KAAO,+CAG/B,MAAY,KAAR4D,IACAxC,EAAME,OAAOC,MAAQ,KACrBkB,IAAMkB,KAAKC,IAEJ,I,EAMff,gBAAkB,SAACzB,GACf,IAAI6C,EAAeC,KAAKC,SAASC,SAAS,IAE1C,EAAK/C,SAAS,CACVgD,YAAaJ,K,4CAIrB,WACI,OACI,qBAAKlE,UAAU,aAAauE,GAAG,cAAcC,KAAK,SAASC,cAAY,cACvEC,kBAAgB,mBAAmBC,cAAY,OAD/C,SAEI,qBAAK3E,UAAU,8CAA8CwE,KAAK,WAAlE,SACI,sBAAKxE,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAcuE,GAAG,mBAA/B,0BACA,wBAAQtE,KAAK,SAASD,UAAU,QAAQ4E,eAAa,QAAQC,aAAW,QAAxE,SACI,sBAAMF,cAAY,OAAlB,uBAGR,sBAAK3E,UAAU,aAAf,UACI,uBAAM8E,OAAO,OAAOC,OAAO,IAAIR,GAAG,IAAlC,UACI,qBAAKvE,UAAU,kBAAf,SACI,uBAAOC,KAAK,OAAOD,UAAU,eAAeuE,GAAG,QAAQE,cAAY,QACnEO,SAAUnC,KAAKzB,mBACf6D,YAAY,mCAEhB,qBAAKjF,UAAU,mBAAf,SACI,uBAAOC,KAAK,OAAOD,UAAU,eAAekF,UAAQ,EAEpDF,SAAUnC,KAAKpB,iBADVoB,KAAK9B,MAAMuD,aAAe,SAIvC,qBAAKtE,UAAU,kBAAf,SACI,eAAC,IAAD,CAAUmF,IAAI,MAAMC,MAAM,UAC1B5D,MAAOqB,KAAK9B,MAAMG,OADlB,UAC4BiD,KAAKkB,MAAMxC,KAAK9B,MAAMG,OAAO,GADzD,YAIR,qBAAKlB,UAAU,eAAf,SACI,wBAAQC,KAAK,SAASD,UAAU,sCAChCsF,QAASzC,KAAKf,eADd,iC,GA5KFlB,a,iBCwBX2E,E,4JAxBX,WAGI,OAFAC,IAAOC,OAAO,MAGV,qBAAKzF,UAAU,MAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,mBAAG0F,KAAI,UAAKvD,EAAOC,WAAZ,YAA0BS,KAAKG,MAAM2C,UAA5C,SACI,qBAAK3F,UAAU,kCAAkCO,MAAM,OAAOC,OAAO,MACrEoF,IAAG,UAAKzD,EAAOC,WAAZ,YAA0BS,KAAKG,MAAM6C,OACxCC,oBAAoB,iBACpBC,UAAU,QAAQC,IAAKnD,KAAKG,MAAMhC,UAEtC,sBAAKhB,UAAU,YAAf,UACI,mBAAGA,UAAU,YAAb,SAA0B6C,KAAKG,MAAMhC,QACrC,qBAAKhB,UAAU,oDAAf,SACI,uBAAOA,UAAU,aAAjB,SAA+BwF,IAAO3C,KAAKG,MAAMiD,UAAUC,OAAO,8B,GAjB1EtF,aC6DLuF,E,4MAzDXpF,MAAQ,CACJI,KAAM,M,EAOViF,YAAc,WACVnE,IAAMoE,IAAIlE,EAAOC,WAAa,WAC7BI,MAAK,SAAAC,GACCA,EAAItB,OACH,EAAKG,SAAS,CACVH,KAAMsB,EAAItB,OAEdmF,QAAQC,IAAI9D,Q,uDAXxB,WACII,KAAKuD,gB,oBAeT,WAAU,IAAD,OACL,OAAuB,OAApBvD,KAAK9B,MAAMI,KAEN,iCACI,qBAAKsD,cAAY,YAAYzE,UAAU,sBAAvC,SACI,qBAAKA,UAAU,YAAf,SACI,uEAGR,cAAC,EAAD,CAAa+C,WAAa,kBAAM,EAAKqD,oBAMzC,iCACI,qBAAK3B,cAAY,YAAYzE,UAAU,sBAAvC,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,iDAAf,SACK6C,KAAK9B,MAAMI,KAAKqF,KAAI,SAAArF,GAAI,OACzB,cAAC,EAAD,CAEIH,MAAOG,EAAKH,MACZ6E,MAAO1E,EAAK0E,MACZF,SAAUxE,EAAKwE,SACfM,SAAU9E,EAAK8E,UAJV9E,EAAKoD,aAS1B,cAAC,EAAD,CAAaxB,WAAa,kBAAM,EAAKqD,wB,GApDpCxF,a,MCUN6F,MAVf,WACI,OACI,eAAC,IAAMC,SAAP,WACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,YCLRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.946e3ceb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Header extends Component {\n    render() { \n        return (\n            <header>\n                <div className=\"navbar navbar-dark bg-dark shadow-sm\">\n                    <div className=\"container\">\n                     <span className=\"navbar-brand d-flex align-items-center\">\n                        <strong>ShootstaTube</strong>\n                    </span>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"modal\" data-target=\"#uploadModal\" \n                    aria-controls=\"navbarHeader\" aria-expanded=\"false\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" fill=\"currentColor\" className=\"bi bi-plus-circle\" viewBox=\"0 0 16 16\">\n                            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n                        </svg>\n                    </button>\n                    </div>\n                </div>\n                <ToastContainer />\n            </header>\n        );\n    }\n}\n \nexport default Header;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() { \n        return (\n            <footer className=\"footer mt-auto py-3 bg-light\">\n                <div className=\"container\">\n                    <span className=\"text-muted\">Copyright 2021 &copy; All rights reserved</span>\n                </div>\n            </footer>\n        );\n    }\n}\n \nexport default Footer;","import React, { Component } from \"react\";\nimport {Progress} from \"reactstrap\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport config from \"./../config.json\";\n\nclass UploadModal extends Component {\n    state = {\n        title: \"\",\n        selectedFile: null,\n        loaded: 0,\n        data: null\n    }\n\n    changeTitleHandler = (event) => {\n        this.setState({title: event.target.value});\n    }\n\n    onChangeHandler = (event) => {\n        var files = event.target.files;\n        \n        if(this.maxSelectFile(event, files) && this.checkMimeType(event, files) && this.checkFileSize(event, files)) {\n            this.setState({\n                selectedFile: files\n            });\n        }\n    }\n\n    onClickHandler = async () => {\n        await this.validate();\n\n        if(this.state.data !== null) {\n            axios.post(config.Server_URL + \"/upload\", this.state.data, { \n            onUploadProgress: ProgressEvent => {\n                this.setState({\n                    loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n                });\n            }\n        })\n        .then(res => {\n            toast.success(\"Upload successful!\");\n            //console.log(res.statusText);\n            \n            setTimeout(function() {\n                this.setState({\n                    data: null,\n                    title: \"\",\n                    selectedFile: null,\n                    loaded: 0\n                });\n                this.resetsFileInput();\n                const { onUploaded } = this.props\n                onUploaded();\n                window.closeModal();\n            }\n            .bind(this), 2000);\n            return true;\n        });\n        }\n    };\n\n    validate = () => {\n        // NOTE: Since this is a quick bake, we don't handle complex validation.\n        const data = new FormData();\n\n        if(this.state.title === \"\") {\n            toast.error(\"Please enter a title for the video.\");\n            return false;\n        }\n        \n        data.append(\"title\", this.state.title);\n\n        if(this.state.selectedFile === null) {\n            toast.error(\"Please select MP4 video for upload.\");\n            return false;\n        }\n\n        for(var x = 0; x<this.state.selectedFile.length; x++) {\n            data.append(\"file\", this.state.selectedFile[x]);\n        }\n        this.setState({data: data}, function () { });\n        return true;\n    };\n\n    maxSelectFile = (event, files) => {\n        if (files.length > config.File_upload.numFiles) { \n            const msg = \"Only \" + config.File_upload.numFiles + \" file can be uploaded at a time\";\n            event.target.value = null; // discard selected file\n            toast.warn(msg);\n            return false;\n        }\n        return true;\n    };\n\n    checkMimeType = (event, files) => {\n        //define message container\n        let err = \"\";\n        // list allow mime type\n        const types = [\"video/mp4\"];\n        \n        // loop access array\n        for(let x = 0; x<files.length; x++) {\n            // compare file type find doesn\"t matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err = \"Unknown file type. Please upload only MP4 format.\\n\";\n                break;\n            }\n        };\n\n        if (err !== \"\") {\n            event.target.value = null; // discard selected file\n            toast.warn(err);\n            //console.log(err);\n            return false; \n        }\n        return true;\n    };\n\n    checkFileSize = (event, files) => {\n        let size = config.File_upload.sizeLimit;\n        let err = \"\";\n\n        for(var x = 0; x<files.length; x++) {\n            //console.log(files[x].size)\n            if (files[x].size > size) {\n                err += files[x].type + \" is too large, please pick a smaller file\\n\";\n            }\n        };\n        if (err !== \"\") {\n            event.target.value = null;\n            toast.warn(err);\n            //console.log(err);\n            return false;\n        }\n\n        return true;\n    }\n\n    resetsFileInput = (event) => {\n        let randomString = Math.random().toString(36);\n\n        this.setState({\n            theInputKey: randomString\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"uploadModal\" role=\"dialog\" data-testid=\"uploadModal\"\n            aria-labelledby=\"uploadModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"uploadModalLabel\">Upload Video</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form method=\"post\" action=\"#\" id=\"#\">\n                                <div className=\"form-group mb-2\">\n                                    <input type=\"text\" className=\"form-control\" id=\"title\" data-testid=\"title\"\n                                    onChange={this.changeTitleHandler}\n                                    placeholder=\"Enter a title for this video\" />\n                                </div>\n                                <div className=\"form-group files\">\n                                    <input type=\"file\" className=\"form-control\" multiple \n                                    key={this.state.theInputKey || '' } \n                                    onChange={this.onChangeHandler} />\n                                </div>\n                            </form>\n                            <div className=\"form-group mt-2\">\n                                <Progress max=\"100\" color=\"success\" \n                                value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-success btn-block uploadBtn\" \n                            onClick={this.onClickHandler}>Upload</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default UploadModal;","import React, { Component } from \"react\";\nimport Moment from 'moment';\nimport config from \"./../config.json\";\n\nclass Video extends Component {\n\n    render() {\n        Moment.locale('en');\n\n        return (\n            <div className=\"col\">\n                <div className=\"card shadow-sm\">\n                    <a href={`${config.Server_URL}/${this.props.filename}`}>\n                        <img className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" \n                        src={`${config.Server_URL}/${this.props.image}`}\n                        preserveAspectRatio=\"xMidYMid slice\" \n                        focusable=\"false\" alt={this.props.title} />\n                    </a>\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">{this.props.title}</p>\n                        <div className=\"d-flex justify-content-between align-items-center\">\n                            <small className=\"text-muted\">{Moment(this.props.datetime).format('d MMM YYYY')}</small>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Video;","import React, { Component } from \"react\";\nimport UploadModal from \"./uploadModal\";\nimport Video from \"./video\";\nimport axios from \"axios\";\nimport config from \"./../config.json\";\n\nclass Videos extends Component {\n\n    state = {\n        data: null\n    }\n\n    componentDidMount() {\n        this.fetchResult();\n    }\n\n    fetchResult = () => {\n        axios.get(config.Server_URL + \"/readDB\")\n        .then(res => {\n            if(res.data) {\n                this.setState({\n                    data: res.data\n                });\n                console.log(res);\n            }\n        });\n    };\n\n    render() {\n        if(this.state.data === null) {\n            return (\n                <main>\n                    <div data-testid=\"videoList\" className=\"album py-5 bg-light\">\n                        <div className=\"container\">\n                            <h4>There are no videos uploaded yet.</h4>\n                        </div>\n                    </div>\n                    <UploadModal onUploaded={ () => this.fetchResult() } />\n                </main>\n            );\n        }\n        else {\n            return (\n                <main>\n                    <div data-testid=\"videoList\" className=\"album py-5 bg-light\">\n                        <div className=\"container\">\n                            <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\n                                {this.state.data.map(data => \n                                <Video \n                                    key={data.id}\n                                    title={data.title}\n                                    image={data.image}\n                                    filename={data.filename}\n                                    datetime={data.datetime}\n                                />)}\n                            </div>\n                        </div>\n                    </div>\n                    <UploadModal onUploaded={ () => this.fetchResult() } />\n                </main>\n            );\n        }\n    }\n}\n \nexport default Videos;","import Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Videos from \"./components/videos\";\nimport \"./App.css\";\nimport React from \"react\";\n\nfunction App() {\n    return (\n        <React.Fragment>\n        <Header />\n        <Videos />\n        <Footer />\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}