{"ast":null,"code":"import _regeneratorRuntime from\"/Users/lwailoon/Desktop/reactapp/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/lwailoon/Desktop/reactapp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/lwailoon/Desktop/reactapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lwailoon/Desktop/reactapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/lwailoon/Desktop/reactapp/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/lwailoon/Desktop/reactapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/lwailoon/Desktop/reactapp/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Progress}from\"reactstrap\";import axios from\"axios\";import{toast}from\"react-toastify\";import config from\"./../config.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UploadModal=/*#__PURE__*/function(_Component){_inherits(UploadModal,_Component);var _super=_createSuper(UploadModal);function UploadModal(){var _this;_classCallCheck(this,UploadModal);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={title:\"\",selectedFile:null,loaded:0,data:null};_this.changeTitleHandler=function(event){_this.setState({title:event.target.value});};_this.onChangeHandler=function(event){var files=event.target.files;if(_this.maxSelectFile(event,files)&&_this.checkMimeType(event,files)&&_this.checkFileSize(event,files)){_this.setState({selectedFile:files});}};_this.onClickHandler=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.validate();case 2:if(_this.state.data!==null){axios.post(config.Server_URL+\"/upload\",_this.state.data,{onUploadProgress:function onUploadProgress(ProgressEvent){_this.setState({loaded:ProgressEvent.loaded/ProgressEvent.total*100});}}).then(function(res){toast.success(\"Upload successful!\");//console.log(res.statusText);\nsetTimeout(function(){this.setState({data:null,title:\"\",selectedFile:null,loaded:0});this.resetsFileInput();var onUploaded=this.props.onUploaded;onUploaded();window.closeModal();}.bind(_assertThisInitialized(_this)),2000);return true;});}case 3:case\"end\":return _context.stop();}}},_callee);}));_this.validate=function(){// NOTE: Since this is a quick bake, we don't handle complex validation.\nvar data=new FormData();if(_this.state.title===\"\"){toast.error(\"Please enter a title for the video.\");return false;}data.append(\"title\",_this.state.title);if(_this.state.selectedFile===null){toast.error(\"Please select MP4 video for upload.\");return false;}for(var x=0;x<_this.state.selectedFile.length;x++){data.append(\"file\",_this.state.selectedFile[x]);}_this.setState({data:data},function(){});return true;};_this.maxSelectFile=function(event,files){if(files.length>config.File_upload.numFiles){var msg=\"Only \"+config.File_upload.numFiles+\" file can be uploaded at a time\";event.target.value=null;// discard selected file\ntoast.warn(msg);return false;}return true;};_this.checkMimeType=function(event,files){//define message container\nvar err=\"\";// list allow mime type\nvar types=[\"video/mp4\"];// loop access array\nvar _loop=function _loop(x){// compare file type find doesn\"t matach\nif(types.every(function(type){return files[x].type!==type;})){// create error message and assign to container   \nerr=\"Unknown file type. Please upload only MP4 format.\\n\";return\"break\";}};for(var x=0;x<files.length;x++){var _ret=_loop(x);if(_ret===\"break\")break;};if(err!==\"\"){event.target.value=null;// discard selected file\ntoast.warn(err);//console.log(err);\nreturn false;}return true;};_this.checkFileSize=function(event,files){var size=config.File_upload.sizeLimit;var err=\"\";for(var x=0;x<files.length;x++){//console.log(files[x].size)\nif(files[x].size>size){err+=files[x].type+\" is too large, please pick a smaller file\\n\";}};if(err!==\"\"){event.target.value=null;toast.warn(err);//console.log(err);\nreturn false;}return true;};_this.resetsFileInput=function(event){var randomString=Math.random().toString(36);_this.setState({theInputKey:randomString});};return _this;}_createClass(UploadModal,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"modal fade\",id:\"uploadModal\",role:\"dialog\",\"data-testid\":\"uploadModal\",\"aria-labelledby\":\"uploadModalLabel\",\"aria-hidden\":\"true\",children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog modal-dialog-centered modal-lg\",role:\"document\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"modal-title\",id:\"uploadModalLabel\",children:\"Upload Video\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"close\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\",children:/*#__PURE__*/_jsx(\"span\",{\"aria-hidden\":\"true\",children:\"\\xD7\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"form\",{method:\"post\",action:\"#\",id:\"#\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group mb-2\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"title\",\"data-testid\":\"title\",onChange:this.changeTitleHandler,placeholder:\"Enter a title for this video\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group files\",children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"form-control\",multiple:true,onChange:this.onChangeHandler},this.state.theInputKey||'')})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group mt-2\",children:/*#__PURE__*/_jsxs(Progress,{max:\"100\",color:\"success\",value:this.state.loaded,children:[Math.round(this.state.loaded,2),\"%\"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-footer\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-success btn-block uploadBtn\",onClick:this.onClickHandler,children:\"Upload\"})})]})})});}}]);return UploadModal;}(Component);export default UploadModal;","map":{"version":3,"sources":["/Users/lwailoon/Desktop/reactapp/client/src/components/uploadModal.jsx"],"names":["React","Component","Progress","axios","toast","config","UploadModal","state","title","selectedFile","loaded","data","changeTitleHandler","event","setState","target","value","onChangeHandler","files","maxSelectFile","checkMimeType","checkFileSize","onClickHandler","validate","post","Server_URL","onUploadProgress","ProgressEvent","total","then","res","success","setTimeout","resetsFileInput","onUploaded","props","window","closeModal","bind","FormData","error","append","x","length","File_upload","numFiles","msg","warn","err","types","every","type","size","sizeLimit","randomString","Math","random","toString","theInputKey","round"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Progress} from \"reactstrap\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport config from \"./../config.json\";\n\nclass UploadModal extends Component {\n    state = {\n        title: \"\",\n        selectedFile: null,\n        loaded: 0,\n        data: null\n    }\n\n    changeTitleHandler = (event) => {\n        this.setState({title: event.target.value});\n    }\n\n    onChangeHandler = (event) => {\n        var files = event.target.files;\n        \n        if(this.maxSelectFile(event, files) && this.checkMimeType(event, files) && this.checkFileSize(event, files)) {\n            this.setState({\n                selectedFile: files\n            });\n        }\n    }\n\n    onClickHandler = async () => {\n        await this.validate();\n\n        if(this.state.data !== null) {\n            axios.post(config.Server_URL + \"/upload\", this.state.data, { \n            onUploadProgress: ProgressEvent => {\n                this.setState({\n                    loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n                });\n            }\n        })\n        .then(res => {\n            toast.success(\"Upload successful!\");\n            //console.log(res.statusText);\n            \n            setTimeout(function() {\n                this.setState({\n                    data: null,\n                    title: \"\",\n                    selectedFile: null,\n                    loaded: 0\n                });\n                this.resetsFileInput();\n                const { onUploaded } = this.props\n                onUploaded();\n                window.closeModal();\n            }\n            .bind(this), 2000);\n            return true;\n        });\n        }\n    };\n\n    validate = () => {\n        // NOTE: Since this is a quick bake, we don't handle complex validation.\n        const data = new FormData();\n\n        if(this.state.title === \"\") {\n            toast.error(\"Please enter a title for the video.\");\n            return false;\n        }\n        \n        data.append(\"title\", this.state.title);\n\n        if(this.state.selectedFile === null) {\n            toast.error(\"Please select MP4 video for upload.\");\n            return false;\n        }\n\n        for(var x = 0; x<this.state.selectedFile.length; x++) {\n            data.append(\"file\", this.state.selectedFile[x]);\n        }\n        this.setState({data: data}, function () { });\n        return true;\n    };\n\n    maxSelectFile = (event, files) => {\n        if (files.length > config.File_upload.numFiles) { \n            const msg = \"Only \" + config.File_upload.numFiles + \" file can be uploaded at a time\";\n            event.target.value = null; // discard selected file\n            toast.warn(msg);\n            return false;\n        }\n        return true;\n    };\n\n    checkMimeType = (event, files) => {\n        //define message container\n        let err = \"\";\n        // list allow mime type\n        const types = [\"video/mp4\"];\n        \n        // loop access array\n        for(let x = 0; x<files.length; x++) {\n            // compare file type find doesn\"t matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err = \"Unknown file type. Please upload only MP4 format.\\n\";\n                break;\n            }\n        };\n\n        if (err !== \"\") {\n            event.target.value = null; // discard selected file\n            toast.warn(err);\n            //console.log(err);\n            return false; \n        }\n        return true;\n    };\n\n    checkFileSize = (event, files) => {\n        let size = config.File_upload.sizeLimit;\n        let err = \"\";\n\n        for(var x = 0; x<files.length; x++) {\n            //console.log(files[x].size)\n            if (files[x].size > size) {\n                err += files[x].type + \" is too large, please pick a smaller file\\n\";\n            }\n        };\n        if (err !== \"\") {\n            event.target.value = null;\n            toast.warn(err);\n            //console.log(err);\n            return false;\n        }\n\n        return true;\n    }\n\n    resetsFileInput = (event) => {\n        let randomString = Math.random().toString(36);\n\n        this.setState({\n            theInputKey: randomString\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"uploadModal\" role=\"dialog\" data-testid=\"uploadModal\"\n            aria-labelledby=\"uploadModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"uploadModalLabel\">Upload Video</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form method=\"post\" action=\"#\" id=\"#\">\n                                <div className=\"form-group mb-2\">\n                                    <input type=\"text\" className=\"form-control\" id=\"title\" data-testid=\"title\"\n                                    onChange={this.changeTitleHandler}\n                                    placeholder=\"Enter a title for this video\" />\n                                </div>\n                                <div className=\"form-group files\">\n                                    <input type=\"file\" className=\"form-control\" multiple \n                                    key={this.state.theInputKey || '' } \n                                    onChange={this.onChangeHandler} />\n                                </div>\n                            </form>\n                            <div className=\"form-group mt-2\">\n                                <Progress max=\"100\" color=\"success\" \n                                value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-success btn-block uploadBtn\" \n                            onClick={this.onClickHandler}>Upload</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default UploadModal;"]},"metadata":{},"sourceType":"module"}